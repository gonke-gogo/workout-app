// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: proto/workout.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ワークアウトステータス
type WorkoutStatus int32

const (
	WorkoutStatus_WORKOUT_STATUS_UNSPECIFIED WorkoutStatus = 0
	WorkoutStatus_WORKOUT_STATUS_PLANNED     WorkoutStatus = 1 // 予定
	WorkoutStatus_WORKOUT_STATUS_IN_PROGRESS WorkoutStatus = 2 // 実行中
	WorkoutStatus_WORKOUT_STATUS_COMPLETED   WorkoutStatus = 3 // 完了
	WorkoutStatus_WORKOUT_STATUS_SKIPPED     WorkoutStatus = 4 // スキップ（筋肉痛で...）
)

// Enum value maps for WorkoutStatus.
var (
	WorkoutStatus_name = map[int32]string{
		0: "WORKOUT_STATUS_UNSPECIFIED",
		1: "WORKOUT_STATUS_PLANNED",
		2: "WORKOUT_STATUS_IN_PROGRESS",
		3: "WORKOUT_STATUS_COMPLETED",
		4: "WORKOUT_STATUS_SKIPPED",
	}
	WorkoutStatus_value = map[string]int32{
		"WORKOUT_STATUS_UNSPECIFIED": 0,
		"WORKOUT_STATUS_PLANNED":     1,
		"WORKOUT_STATUS_IN_PROGRESS": 2,
		"WORKOUT_STATUS_COMPLETED":   3,
		"WORKOUT_STATUS_SKIPPED":     4,
	}
)

func (x WorkoutStatus) Enum() *WorkoutStatus {
	p := new(WorkoutStatus)
	*p = x
	return p
}

func (x WorkoutStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkoutStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workout_proto_enumTypes[0].Descriptor()
}

func (WorkoutStatus) Type() protoreflect.EnumType {
	return &file_proto_workout_proto_enumTypes[0]
}

func (x WorkoutStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkoutStatus.Descriptor instead.
func (WorkoutStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{0}
}

// 難易度
type Difficulty int32

const (
	Difficulty_DIFFICULTY_UNSPECIFIED  Difficulty = 0
	Difficulty_DIFFICULTY_BEGINNER     Difficulty = 1 // 初心者
	Difficulty_DIFFICULTY_INTERMEDIATE Difficulty = 2 // 中級者
	Difficulty_DIFFICULTY_ADVANCED     Difficulty = 3 // 上級者
	Difficulty_DIFFICULTY_BEAST        Difficulty = 4 // 野獣級
)

// Enum value maps for Difficulty.
var (
	Difficulty_name = map[int32]string{
		0: "DIFFICULTY_UNSPECIFIED",
		1: "DIFFICULTY_BEGINNER",
		2: "DIFFICULTY_INTERMEDIATE",
		3: "DIFFICULTY_ADVANCED",
		4: "DIFFICULTY_BEAST",
	}
	Difficulty_value = map[string]int32{
		"DIFFICULTY_UNSPECIFIED":  0,
		"DIFFICULTY_BEGINNER":     1,
		"DIFFICULTY_INTERMEDIATE": 2,
		"DIFFICULTY_ADVANCED":     3,
		"DIFFICULTY_BEAST":        4,
	}
)

func (x Difficulty) Enum() *Difficulty {
	p := new(Difficulty)
	*p = x
	return p
}

func (x Difficulty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Difficulty) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workout_proto_enumTypes[1].Descriptor()
}

func (Difficulty) Type() protoreflect.EnumType {
	return &file_proto_workout_proto_enumTypes[1]
}

func (x Difficulty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Difficulty.Descriptor instead.
func (Difficulty) EnumDescriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{1}
}

// 筋肉群
type MuscleGroup int32

const (
	MuscleGroup_UNSPECIFIED MuscleGroup = 0  // 未指定
	MuscleGroup_CHEST       MuscleGroup = 1  // 胸
	MuscleGroup_BACK        MuscleGroup = 2  // 背中
	MuscleGroup_LEGS        MuscleGroup = 3  // 脚
	MuscleGroup_SHOULDERS   MuscleGroup = 4  // 肩
	MuscleGroup_ARMS        MuscleGroup = 5  // 腕
	MuscleGroup_ABS         MuscleGroup = 6  // 腹筋
	MuscleGroup_CORE        MuscleGroup = 7  // 体幹
	MuscleGroup_GLUTES      MuscleGroup = 8  // 臀部
	MuscleGroup_CARDIO      MuscleGroup = 9  // 有酸素
	MuscleGroup_FULL_BODY   MuscleGroup = 10 // 全身
)

// Enum value maps for MuscleGroup.
var (
	MuscleGroup_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "CHEST",
		2:  "BACK",
		3:  "LEGS",
		4:  "SHOULDERS",
		5:  "ARMS",
		6:  "ABS",
		7:  "CORE",
		8:  "GLUTES",
		9:  "CARDIO",
		10: "FULL_BODY",
	}
	MuscleGroup_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CHEST":       1,
		"BACK":        2,
		"LEGS":        3,
		"SHOULDERS":   4,
		"ARMS":        5,
		"ABS":         6,
		"CORE":        7,
		"GLUTES":      8,
		"CARDIO":      9,
		"FULL_BODY":   10,
	}
)

func (x MuscleGroup) Enum() *MuscleGroup {
	p := new(MuscleGroup)
	*p = x
	return p
}

func (x MuscleGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MuscleGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workout_proto_enumTypes[2].Descriptor()
}

func (MuscleGroup) Type() protoreflect.EnumType {
	return &file_proto_workout_proto_enumTypes[2]
}

func (x MuscleGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MuscleGroup.Descriptor instead.
func (MuscleGroup) EnumDescriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{2}
}

// トレーニング種目
type ExerciseType int32

const (
	ExerciseType_EXERCISE_UNSPECIFIED       ExerciseType = 0 // 未指定
	ExerciseType_EXERCISE_BENCH_PRESS       ExerciseType = 1 // ベンチプレス
	ExerciseType_EXERCISE_SQUAT             ExerciseType = 2 // スクワット
	ExerciseType_EXERCISE_DEADLIFT          ExerciseType = 3 // デッドリフト
	ExerciseType_EXERCISE_DUMBBELL_SHOULDER ExerciseType = 4 // ダンベルショルダープレス
	ExerciseType_EXERCISE_PULL_UP           ExerciseType = 5 // 懸垂
	ExerciseType_EXERCISE_SIDE_RAISE        ExerciseType = 6 // サイドレイズ
	ExerciseType_EXERCISE_ONE_HAND_ROW      ExerciseType = 7 // ワンハンドロー
	ExerciseType_EXERCISE_HIGH_PULL         ExerciseType = 8 // ハイプル
)

// Enum value maps for ExerciseType.
var (
	ExerciseType_name = map[int32]string{
		0: "EXERCISE_UNSPECIFIED",
		1: "EXERCISE_BENCH_PRESS",
		2: "EXERCISE_SQUAT",
		3: "EXERCISE_DEADLIFT",
		4: "EXERCISE_DUMBBELL_SHOULDER",
		5: "EXERCISE_PULL_UP",
		6: "EXERCISE_SIDE_RAISE",
		7: "EXERCISE_ONE_HAND_ROW",
		8: "EXERCISE_HIGH_PULL",
	}
	ExerciseType_value = map[string]int32{
		"EXERCISE_UNSPECIFIED":       0,
		"EXERCISE_BENCH_PRESS":       1,
		"EXERCISE_SQUAT":             2,
		"EXERCISE_DEADLIFT":          3,
		"EXERCISE_DUMBBELL_SHOULDER": 4,
		"EXERCISE_PULL_UP":           5,
		"EXERCISE_SIDE_RAISE":        6,
		"EXERCISE_ONE_HAND_ROW":      7,
		"EXERCISE_HIGH_PULL":         8,
	}
)

func (x ExerciseType) Enum() *ExerciseType {
	p := new(ExerciseType)
	*p = x
	return p
}

func (x ExerciseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExerciseType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workout_proto_enumTypes[3].Descriptor()
}

func (ExerciseType) Type() protoreflect.EnumType {
	return &file_proto_workout_proto_enumTypes[3]
}

func (x ExerciseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExerciseType.Descriptor instead.
func (ExerciseType) EnumDescriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{3}
}

// ワークアウト情報
type Workout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExerciseType ExerciseType  `protobuf:"varint,2,opt,name=exercise_type,json=exerciseType,proto3,enum=workout.ExerciseType" json:"exercise_type,omitempty"`
	Description  string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status       WorkoutStatus `protobuf:"varint,4,opt,name=status,proto3,enum=workout.WorkoutStatus" json:"status,omitempty"`
	Difficulty   Difficulty    `protobuf:"varint,5,opt,name=difficulty,proto3,enum=workout.Difficulty" json:"difficulty,omitempty"`
	MuscleGroup  MuscleGroup   `protobuf:"varint,6,opt,name=muscle_group,json=muscleGroup,proto3,enum=workout.MuscleGroup" json:"muscle_group,omitempty"`
	Sets         int32         `protobuf:"varint,7,opt,name=sets,proto3" json:"sets,omitempty"`
	Reps         int32         `protobuf:"varint,8,opt,name=reps,proto3" json:"reps,omitempty"`
	Weight       float64       `protobuf:"fixed64,9,opt,name=weight,proto3" json:"weight,omitempty"`
	Notes        string        `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt    string        `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string        `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CompletedAt  string        `protobuf:"bytes,13,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *Workout) Reset() {
	*x = Workout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workout) ProtoMessage() {}

func (x *Workout) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workout.ProtoReflect.Descriptor instead.
func (*Workout) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{0}
}

func (x *Workout) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Workout) GetExerciseType() ExerciseType {
	if x != nil {
		return x.ExerciseType
	}
	return ExerciseType_EXERCISE_UNSPECIFIED
}

func (x *Workout) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Workout) GetStatus() WorkoutStatus {
	if x != nil {
		return x.Status
	}
	return WorkoutStatus_WORKOUT_STATUS_UNSPECIFIED
}

func (x *Workout) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

func (x *Workout) GetMuscleGroup() MuscleGroup {
	if x != nil {
		return x.MuscleGroup
	}
	return MuscleGroup_UNSPECIFIED
}

func (x *Workout) GetSets() int32 {
	if x != nil {
		return x.Sets
	}
	return 0
}

func (x *Workout) GetReps() int32 {
	if x != nil {
		return x.Reps
	}
	return 0
}

func (x *Workout) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Workout) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Workout) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Workout) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Workout) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

// ワークアウト作成リクエスト
type CreateWorkoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExerciseType ExerciseType `protobuf:"varint,1,opt,name=exercise_type,json=exerciseType,proto3,enum=workout.ExerciseType" json:"exercise_type,omitempty"`
	Description  string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Difficulty   Difficulty   `protobuf:"varint,3,opt,name=difficulty,proto3,enum=workout.Difficulty" json:"difficulty,omitempty"`
	MuscleGroup  MuscleGroup  `protobuf:"varint,4,opt,name=muscle_group,json=muscleGroup,proto3,enum=workout.MuscleGroup" json:"muscle_group,omitempty"`
	Sets         int32        `protobuf:"varint,5,opt,name=sets,proto3" json:"sets,omitempty"`
	Reps         int32        `protobuf:"varint,6,opt,name=reps,proto3" json:"reps,omitempty"`
	Weight       float64      `protobuf:"fixed64,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Notes        string       `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *CreateWorkoutRequest) Reset() {
	*x = CreateWorkoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkoutRequest) ProtoMessage() {}

func (x *CreateWorkoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkoutRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkoutRequest) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWorkoutRequest) GetExerciseType() ExerciseType {
	if x != nil {
		return x.ExerciseType
	}
	return ExerciseType_EXERCISE_UNSPECIFIED
}

func (x *CreateWorkoutRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateWorkoutRequest) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

func (x *CreateWorkoutRequest) GetMuscleGroup() MuscleGroup {
	if x != nil {
		return x.MuscleGroup
	}
	return MuscleGroup_UNSPECIFIED
}

func (x *CreateWorkoutRequest) GetSets() int32 {
	if x != nil {
		return x.Sets
	}
	return 0
}

func (x *CreateWorkoutRequest) GetReps() int32 {
	if x != nil {
		return x.Reps
	}
	return 0
}

func (x *CreateWorkoutRequest) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateWorkoutRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// ワークアウト作成レスポンス
type CreateWorkoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workout *Workout `protobuf:"bytes,1,opt,name=workout,proto3" json:"workout,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateWorkoutResponse) Reset() {
	*x = CreateWorkoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkoutResponse) ProtoMessage() {}

func (x *CreateWorkoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkoutResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkoutResponse) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWorkoutResponse) GetWorkout() *Workout {
	if x != nil {
		return x.Workout
	}
	return nil
}

func (x *CreateWorkoutResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ワークアウト取得リクエスト
type GetWorkoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWorkoutRequest) Reset() {
	*x = GetWorkoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutRequest) ProtoMessage() {}

func (x *GetWorkoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutRequest.ProtoReflect.Descriptor instead.
func (*GetWorkoutRequest) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{3}
}

func (x *GetWorkoutRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ワークアウト取得レスポンス
type GetWorkoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workout *Workout `protobuf:"bytes,1,opt,name=workout,proto3" json:"workout,omitempty"`
}

func (x *GetWorkoutResponse) Reset() {
	*x = GetWorkoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutResponse) ProtoMessage() {}

func (x *GetWorkoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutResponse.ProtoReflect.Descriptor instead.
func (*GetWorkoutResponse) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{4}
}

func (x *GetWorkoutResponse) GetWorkout() *Workout {
	if x != nil {
		return x.Workout
	}
	return nil
}

// ワークアウト更新リクエスト
type UpdateWorkoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExerciseType ExerciseType  `protobuf:"varint,2,opt,name=exercise_type,json=exerciseType,proto3,enum=workout.ExerciseType" json:"exercise_type,omitempty"`
	Description  string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status       WorkoutStatus `protobuf:"varint,4,opt,name=status,proto3,enum=workout.WorkoutStatus" json:"status,omitempty"`
	Difficulty   Difficulty    `protobuf:"varint,5,opt,name=difficulty,proto3,enum=workout.Difficulty" json:"difficulty,omitempty"`
	MuscleGroup  MuscleGroup   `protobuf:"varint,6,opt,name=muscle_group,json=muscleGroup,proto3,enum=workout.MuscleGroup" json:"muscle_group,omitempty"`
	Sets         int32         `protobuf:"varint,7,opt,name=sets,proto3" json:"sets,omitempty"`
	Reps         int32         `protobuf:"varint,8,opt,name=reps,proto3" json:"reps,omitempty"`
	Weight       float64       `protobuf:"fixed64,9,opt,name=weight,proto3" json:"weight,omitempty"`
	Notes        string        `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *UpdateWorkoutRequest) Reset() {
	*x = UpdateWorkoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkoutRequest) ProtoMessage() {}

func (x *UpdateWorkoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkoutRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkoutRequest) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateWorkoutRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWorkoutRequest) GetExerciseType() ExerciseType {
	if x != nil {
		return x.ExerciseType
	}
	return ExerciseType_EXERCISE_UNSPECIFIED
}

func (x *UpdateWorkoutRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateWorkoutRequest) GetStatus() WorkoutStatus {
	if x != nil {
		return x.Status
	}
	return WorkoutStatus_WORKOUT_STATUS_UNSPECIFIED
}

func (x *UpdateWorkoutRequest) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

func (x *UpdateWorkoutRequest) GetMuscleGroup() MuscleGroup {
	if x != nil {
		return x.MuscleGroup
	}
	return MuscleGroup_UNSPECIFIED
}

func (x *UpdateWorkoutRequest) GetSets() int32 {
	if x != nil {
		return x.Sets
	}
	return 0
}

func (x *UpdateWorkoutRequest) GetReps() int32 {
	if x != nil {
		return x.Reps
	}
	return 0
}

func (x *UpdateWorkoutRequest) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateWorkoutRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// ワークアウト更新レスポンス
type UpdateWorkoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workout *Workout `protobuf:"bytes,1,opt,name=workout,proto3" json:"workout,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateWorkoutResponse) Reset() {
	*x = UpdateWorkoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkoutResponse) ProtoMessage() {}

func (x *UpdateWorkoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkoutResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkoutResponse) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateWorkoutResponse) GetWorkout() *Workout {
	if x != nil {
		return x.Workout
	}
	return nil
}

func (x *UpdateWorkoutResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ワークアウト削除リクエスト
type DeleteWorkoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWorkoutRequest) Reset() {
	*x = DeleteWorkoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkoutRequest) ProtoMessage() {}

func (x *DeleteWorkoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkoutRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkoutRequest) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteWorkoutRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ワークアウト削除レスポンス
type DeleteWorkoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteWorkoutResponse) Reset() {
	*x = DeleteWorkoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkoutResponse) ProtoMessage() {}

func (x *DeleteWorkoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkoutResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkoutResponse) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWorkoutResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ワークアウト一覧取得リクエスト
type ListWorkoutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusFilter      WorkoutStatus `protobuf:"varint,1,opt,name=status_filter,json=statusFilter,proto3,enum=workout.WorkoutStatus" json:"status_filter,omitempty"`
	DifficultyFilter  Difficulty    `protobuf:"varint,2,opt,name=difficulty_filter,json=difficultyFilter,proto3,enum=workout.Difficulty" json:"difficulty_filter,omitempty"`
	MuscleGroupFilter MuscleGroup   `protobuf:"varint,3,opt,name=muscle_group_filter,json=muscleGroupFilter,proto3,enum=workout.MuscleGroup" json:"muscle_group_filter,omitempty"`
}

func (x *ListWorkoutsRequest) Reset() {
	*x = ListWorkoutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkoutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkoutsRequest) ProtoMessage() {}

func (x *ListWorkoutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkoutsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkoutsRequest) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{9}
}

func (x *ListWorkoutsRequest) GetStatusFilter() WorkoutStatus {
	if x != nil {
		return x.StatusFilter
	}
	return WorkoutStatus_WORKOUT_STATUS_UNSPECIFIED
}

func (x *ListWorkoutsRequest) GetDifficultyFilter() Difficulty {
	if x != nil {
		return x.DifficultyFilter
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

func (x *ListWorkoutsRequest) GetMuscleGroupFilter() MuscleGroup {
	if x != nil {
		return x.MuscleGroupFilter
	}
	return MuscleGroup_UNSPECIFIED
}

// ワークアウト一覧取得レスポンス
type ListWorkoutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workouts   []*Workout `protobuf:"bytes,1,rep,name=workouts,proto3" json:"workouts,omitempty"`
	TotalCount int32      `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Message    string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // サマリーメッセージ
}

func (x *ListWorkoutsResponse) Reset() {
	*x = ListWorkoutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkoutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkoutsResponse) ProtoMessage() {}

func (x *ListWorkoutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkoutsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkoutsResponse) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{10}
}

func (x *ListWorkoutsResponse) GetWorkouts() []*Workout {
	if x != nil {
		return x.Workouts
	}
	return nil
}

func (x *ListWorkoutsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListWorkoutsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ワークアウト統計取得リクエスト
type GetWorkoutStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period string `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"` // "today", "week", "month"
}

func (x *GetWorkoutStatsRequest) Reset() {
	*x = GetWorkoutStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkoutStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutStatsRequest) ProtoMessage() {}

func (x *GetWorkoutStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutStatsRequest.ProtoReflect.Descriptor instead.
func (*GetWorkoutStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{11}
}

func (x *GetWorkoutStatsRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

// ワークアウト統計取得レスポンス
type GetWorkoutStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalWorkouts     int32            `protobuf:"varint,1,opt,name=total_workouts,json=totalWorkouts,proto3" json:"total_workouts,omitempty"`
	CompletedWorkouts int32            `protobuf:"varint,2,opt,name=completed_workouts,json=completedWorkouts,proto3" json:"completed_workouts,omitempty"`
	SkippedWorkouts   int32            `protobuf:"varint,3,opt,name=skipped_workouts,json=skippedWorkouts,proto3" json:"skipped_workouts,omitempty"`
	TotalWeightLifted float64          `protobuf:"fixed64,4,opt,name=total_weight_lifted,json=totalWeightLifted,proto3" json:"total_weight_lifted,omitempty"`
	MuscleGroupStats  map[string]int32 `protobuf:"bytes,5,rep,name=muscle_group_stats,json=muscleGroupStats,proto3" json:"muscle_group_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Message           string           `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetWorkoutStatsResponse) Reset() {
	*x = GetWorkoutStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkoutStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutStatsResponse) ProtoMessage() {}

func (x *GetWorkoutStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutStatsResponse.ProtoReflect.Descriptor instead.
func (*GetWorkoutStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{12}
}

func (x *GetWorkoutStatsResponse) GetTotalWorkouts() int32 {
	if x != nil {
		return x.TotalWorkouts
	}
	return 0
}

func (x *GetWorkoutStatsResponse) GetCompletedWorkouts() int32 {
	if x != nil {
		return x.CompletedWorkouts
	}
	return 0
}

func (x *GetWorkoutStatsResponse) GetSkippedWorkouts() int32 {
	if x != nil {
		return x.SkippedWorkouts
	}
	return 0
}

func (x *GetWorkoutStatsResponse) GetTotalWeightLifted() float64 {
	if x != nil {
		return x.TotalWeightLifted
	}
	return 0
}

func (x *GetWorkoutStatsResponse) GetMuscleGroupStats() map[string]int32 {
	if x != nil {
		return x.MuscleGroupStats
	}
	return nil
}

func (x *GetWorkoutStatsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 高強度ワークアウト取得リクエスト
type GetHighIntensityWorkoutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHighIntensityWorkoutsRequest) Reset() {
	*x = GetHighIntensityWorkoutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHighIntensityWorkoutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHighIntensityWorkoutsRequest) ProtoMessage() {}

func (x *GetHighIntensityWorkoutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHighIntensityWorkoutsRequest.ProtoReflect.Descriptor instead.
func (*GetHighIntensityWorkoutsRequest) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{13}
}

// 高強度ワークアウト取得レスポンス
type GetHighIntensityWorkoutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workouts   []*Workout `protobuf:"bytes,1,rep,name=workouts,proto3" json:"workouts,omitempty"`
	TotalCount int32      `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Message    string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetHighIntensityWorkoutsResponse) Reset() {
	*x = GetHighIntensityWorkoutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workout_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHighIntensityWorkoutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHighIntensityWorkoutsResponse) ProtoMessage() {}

func (x *GetHighIntensityWorkoutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workout_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHighIntensityWorkoutsResponse.ProtoReflect.Descriptor instead.
func (*GetHighIntensityWorkoutsResponse) Descriptor() ([]byte, []int) {
	return file_proto_workout_proto_rawDescGZIP(), []int{14}
}

func (x *GetHighIntensityWorkoutsResponse) GetWorkouts() []*Workout {
	if x != nil {
		return x.Workouts
	}
	return nil
}

func (x *GetHighIntensityWorkoutsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetHighIntensityWorkoutsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_workout_proto protoreflect.FileDescriptor

var file_proto_workout_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x22, 0xcc,
	0x03, 0x0a, 0x07, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f,
	0x75, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x37, 0x0a,
	0x0c, 0x6d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x4d, 0x75,
	0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x63, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65,
	0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x70, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb8, 0x02,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f,
	0x75, 0x74, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x52, 0x0a, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0c, 0x6d, 0x75, 0x73,
	0x63, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x4d, 0x75, 0x73, 0x63, 0x6c, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x6f, 0x75, 0x74, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x22, 0xf8,
	0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x6f, 0x75, 0x74, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x52, 0x0a,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0c, 0x6d, 0x75,
	0x73, 0x63, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x4d, 0x75, 0x73, 0x63, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x11, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x44, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x52, 0x10, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x13, 0x6d, 0x75,
	0x73, 0x63, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75,
	0x74, 0x2e, 0x4d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11, 0x6d,
	0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x7f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x6f, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x22, 0x8f, 0x03, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f,
	0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x6c, 0x69, 0x66, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x66, 0x74, 0x65, 0x64,
	0x12, 0x64, 0x0a, 0x12, 0x6d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d,
	0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x6d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x43, 0x0a, 0x15, 0x4d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x67, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75,
	0x74, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0xa5, 0x01, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x6f,
	0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x4f, 0x52, 0x4b,
	0x4f, 0x55, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x4f, 0x52, 0x4b,
	0x4f, 0x55, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x4f, 0x52, 0x4b, 0x4f, 0x55, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x4f, 0x52, 0x4b, 0x4f, 0x55, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x4f, 0x52, 0x4b, 0x4f, 0x55, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x8d,
	0x01, 0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1a, 0x0a,
	0x16, 0x44, 0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x49, 0x46,
	0x46, 0x49, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x4e, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4c, 0x54, 0x59,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x44, 0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f, 0x41, 0x44,
	0x56, 0x41, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x49, 0x46, 0x46,
	0x49, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f, 0x42, 0x45, 0x41, 0x53, 0x54, 0x10, 0x04, 0x2a, 0x90,
	0x01, 0x0a, 0x0b, 0x4d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x43, 0x48, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x41,
	0x43, 0x4b, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x47, 0x53, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x48, 0x4f, 0x55, 0x4c, 0x44, 0x45, 0x52, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a,
	0x04, 0x41, 0x52, 0x4d, 0x53, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x42, 0x53, 0x10, 0x06,
	0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c,
	0x55, 0x54, 0x45, 0x53, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x52, 0x44, 0x49, 0x4f,
	0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10,
	0x0a, 0x2a, 0xef, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x58, 0x45, 0x52, 0x43, 0x49, 0x53, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x58, 0x45, 0x52, 0x43, 0x49, 0x53, 0x45, 0x5f, 0x42, 0x45, 0x4e, 0x43, 0x48, 0x5f, 0x50,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x58, 0x45, 0x52, 0x43, 0x49,
	0x53, 0x45, 0x5f, 0x53, 0x51, 0x55, 0x41, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58,
	0x45, 0x52, 0x43, 0x49, 0x53, 0x45, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x4c, 0x49, 0x46, 0x54, 0x10,
	0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x58, 0x45, 0x52, 0x43, 0x49, 0x53, 0x45, 0x5f, 0x44, 0x55,
	0x4d, 0x42, 0x42, 0x45, 0x4c, 0x4c, 0x5f, 0x53, 0x48, 0x4f, 0x55, 0x4c, 0x44, 0x45, 0x52, 0x10,
	0x04, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x58, 0x45, 0x52, 0x43, 0x49, 0x53, 0x45, 0x5f, 0x50, 0x55,
	0x4c, 0x4c, 0x5f, 0x55, 0x50, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x45, 0x52, 0x43,
	0x49, 0x53, 0x45, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x52, 0x41, 0x49, 0x53, 0x45, 0x10, 0x06,
	0x12, 0x19, 0x0a, 0x15, 0x45, 0x58, 0x45, 0x52, 0x43, 0x49, 0x53, 0x45, 0x5f, 0x4f, 0x4e, 0x45,
	0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x4f, 0x57, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x58, 0x45, 0x52, 0x43, 0x49, 0x53, 0x45, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x50, 0x55, 0x4c,
	0x4c, 0x10, 0x08, 0x32, 0xdb, 0x04, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x6f, 0x75, 0x74, 0x12, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x1d,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x1d,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x1c, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6f,
	0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x6f, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x57, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x1d, 0x5a, 0x18, 0x67, 0x6f, 0x6c, 0x76, 0x32, 0x2d, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xd8, 0x01, 0x01,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_workout_proto_rawDescOnce sync.Once
	file_proto_workout_proto_rawDescData = file_proto_workout_proto_rawDesc
)

func file_proto_workout_proto_rawDescGZIP() []byte {
	file_proto_workout_proto_rawDescOnce.Do(func() {
		file_proto_workout_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_workout_proto_rawDescData)
	})
	return file_proto_workout_proto_rawDescData
}

var file_proto_workout_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_workout_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_workout_proto_goTypes = []interface{}{
	(WorkoutStatus)(0),                       // 0: workout.WorkoutStatus
	(Difficulty)(0),                          // 1: workout.Difficulty
	(MuscleGroup)(0),                         // 2: workout.MuscleGroup
	(ExerciseType)(0),                        // 3: workout.ExerciseType
	(*Workout)(nil),                          // 4: workout.Workout
	(*CreateWorkoutRequest)(nil),             // 5: workout.CreateWorkoutRequest
	(*CreateWorkoutResponse)(nil),            // 6: workout.CreateWorkoutResponse
	(*GetWorkoutRequest)(nil),                // 7: workout.GetWorkoutRequest
	(*GetWorkoutResponse)(nil),               // 8: workout.GetWorkoutResponse
	(*UpdateWorkoutRequest)(nil),             // 9: workout.UpdateWorkoutRequest
	(*UpdateWorkoutResponse)(nil),            // 10: workout.UpdateWorkoutResponse
	(*DeleteWorkoutRequest)(nil),             // 11: workout.DeleteWorkoutRequest
	(*DeleteWorkoutResponse)(nil),            // 12: workout.DeleteWorkoutResponse
	(*ListWorkoutsRequest)(nil),              // 13: workout.ListWorkoutsRequest
	(*ListWorkoutsResponse)(nil),             // 14: workout.ListWorkoutsResponse
	(*GetWorkoutStatsRequest)(nil),           // 15: workout.GetWorkoutStatsRequest
	(*GetWorkoutStatsResponse)(nil),          // 16: workout.GetWorkoutStatsResponse
	(*GetHighIntensityWorkoutsRequest)(nil),  // 17: workout.GetHighIntensityWorkoutsRequest
	(*GetHighIntensityWorkoutsResponse)(nil), // 18: workout.GetHighIntensityWorkoutsResponse
	nil,                                      // 19: workout.GetWorkoutStatsResponse.MuscleGroupStatsEntry
}
var file_proto_workout_proto_depIdxs = []int32{
	3,  // 0: workout.Workout.exercise_type:type_name -> workout.ExerciseType
	0,  // 1: workout.Workout.status:type_name -> workout.WorkoutStatus
	1,  // 2: workout.Workout.difficulty:type_name -> workout.Difficulty
	2,  // 3: workout.Workout.muscle_group:type_name -> workout.MuscleGroup
	3,  // 4: workout.CreateWorkoutRequest.exercise_type:type_name -> workout.ExerciseType
	1,  // 5: workout.CreateWorkoutRequest.difficulty:type_name -> workout.Difficulty
	2,  // 6: workout.CreateWorkoutRequest.muscle_group:type_name -> workout.MuscleGroup
	4,  // 7: workout.CreateWorkoutResponse.workout:type_name -> workout.Workout
	4,  // 8: workout.GetWorkoutResponse.workout:type_name -> workout.Workout
	3,  // 9: workout.UpdateWorkoutRequest.exercise_type:type_name -> workout.ExerciseType
	0,  // 10: workout.UpdateWorkoutRequest.status:type_name -> workout.WorkoutStatus
	1,  // 11: workout.UpdateWorkoutRequest.difficulty:type_name -> workout.Difficulty
	2,  // 12: workout.UpdateWorkoutRequest.muscle_group:type_name -> workout.MuscleGroup
	4,  // 13: workout.UpdateWorkoutResponse.workout:type_name -> workout.Workout
	0,  // 14: workout.ListWorkoutsRequest.status_filter:type_name -> workout.WorkoutStatus
	1,  // 15: workout.ListWorkoutsRequest.difficulty_filter:type_name -> workout.Difficulty
	2,  // 16: workout.ListWorkoutsRequest.muscle_group_filter:type_name -> workout.MuscleGroup
	4,  // 17: workout.ListWorkoutsResponse.workouts:type_name -> workout.Workout
	19, // 18: workout.GetWorkoutStatsResponse.muscle_group_stats:type_name -> workout.GetWorkoutStatsResponse.MuscleGroupStatsEntry
	4,  // 19: workout.GetHighIntensityWorkoutsResponse.workouts:type_name -> workout.Workout
	5,  // 20: workout.WorkoutService.CreateWorkout:input_type -> workout.CreateWorkoutRequest
	7,  // 21: workout.WorkoutService.GetWorkout:input_type -> workout.GetWorkoutRequest
	9,  // 22: workout.WorkoutService.UpdateWorkout:input_type -> workout.UpdateWorkoutRequest
	11, // 23: workout.WorkoutService.DeleteWorkout:input_type -> workout.DeleteWorkoutRequest
	13, // 24: workout.WorkoutService.ListWorkouts:input_type -> workout.ListWorkoutsRequest
	15, // 25: workout.WorkoutService.GetWorkoutStats:input_type -> workout.GetWorkoutStatsRequest
	17, // 26: workout.WorkoutService.GetHighIntensityWorkouts:input_type -> workout.GetHighIntensityWorkoutsRequest
	6,  // 27: workout.WorkoutService.CreateWorkout:output_type -> workout.CreateWorkoutResponse
	8,  // 28: workout.WorkoutService.GetWorkout:output_type -> workout.GetWorkoutResponse
	10, // 29: workout.WorkoutService.UpdateWorkout:output_type -> workout.UpdateWorkoutResponse
	12, // 30: workout.WorkoutService.DeleteWorkout:output_type -> workout.DeleteWorkoutResponse
	14, // 31: workout.WorkoutService.ListWorkouts:output_type -> workout.ListWorkoutsResponse
	16, // 32: workout.WorkoutService.GetWorkoutStats:output_type -> workout.GetWorkoutStatsResponse
	18, // 33: workout.WorkoutService.GetHighIntensityWorkouts:output_type -> workout.GetHighIntensityWorkoutsResponse
	27, // [27:34] is the sub-list for method output_type
	20, // [20:27] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_workout_proto_init() }
func file_proto_workout_proto_init() {
	if File_proto_workout_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_workout_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkoutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkoutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkoutStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkoutStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHighIntensityWorkoutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workout_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHighIntensityWorkoutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_workout_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_workout_proto_goTypes,
		DependencyIndexes: file_proto_workout_proto_depIdxs,
		EnumInfos:         file_proto_workout_proto_enumTypes,
		MessageInfos:      file_proto_workout_proto_msgTypes,
	}.Build()
	File_proto_workout_proto = out.File
	file_proto_workout_proto_rawDesc = nil
	file_proto_workout_proto_goTypes = nil
	file_proto_workout_proto_depIdxs = nil
}
